"""
 I really liked this problem. I encountered it on www.hackerrank.com
 https://www.hackerrank.com/challenges/circular-array-rotation
 
John Watson performs an operation called a right circular rotation on an array of integers, .
After performing one right circular rotation operation, the array is transformed from  to.

Watson performs this operation  times. To test Sherlock's ability to identify the current element at a particular position in the rotated array, Watson asks  queries, where each query consists of a single integer, , for which you must print the element at index  in the rotated array (i.e., the value of ).

Input Format
The first line contains  space-separated integers, n ,k , and q, respectively. 
The second line contains  space-separated integers, where each integer  describes array element. 
Each of the subsequent lines contains a single integer denoting m.
"""


### This is my solution. 

# Read inputs from cli.
array_size,k_times,num_of_queries = input().strip().split(' ')
array_size,k_times,num_of_queries = [int(array_size),int(k_times),int(num_of_queries)]

array_2 = input().strip().split(' ')
array = list()

# make sure that the values are in int. 
for x in array_2:
    array.append(int(x))

# Rotate items. 
for x in range(k_times):
    # Take the last element in the array and push it to the beginning of the array. 
    last_element = array[-1]
    # Remove it 
    del array[-1]
    # Reinsert the element to the list. 
    array.insert(0, last_element)
    
for v in range(num_of_queries):
    print(array[int(input().strip())])
